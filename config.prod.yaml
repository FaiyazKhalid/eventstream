# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: ncpu

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: 500

# Logger info
logging:
  level: warn
  streams:
  # Use gelf-stream -> logstash
  - type: gelf
    host: logstash1003.eqiad.wmnet
    port: 12201

# Statsd metrics reporter
metrics:
  type: statsd
  host: statsd.eqiad.wmnet
  port: 8125

services:
  - name: eventstreams
    # a relative path or the name of an npm package, if different from name
    module: ./app.js
    # optionally, a version constraint of the npm package
    # version: ^0.4.0
    # per-service config
    conf:
      port: 6947
      # interface: localhost # uncomment to only listen on localhost
      # more per-service config settings
      # the location of the spec, defaults to spec.yaml if not specified
      spec: ./spec.yaml
      # allow cross-domain requests to the API (default '*')
      cors: '*'

      # Stream routes configuration.  Each key in this object will be a route path at
      # /v1/stream/{stream_name}, and each stream config object should configure a list of
      # topics to be included in that stream.
      # This should match the /v1/stream/ routes configrued in spec.yaml.
      streams:
        test:
          topics: [eqiad.test.event, codfw.test.event]
        revision-create:
          topics: [eqiad.mediawiki.revision-create, codfw.mediawiki.revision-create]

      # kafka configs go here.
      kafka:
        metadata.broker.list: 'localhost:9092'
        statistics.interval.ms: 60000

